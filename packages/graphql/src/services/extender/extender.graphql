extend type TransactionConnection {
  # custom
  tokens: [Token]
  # custom
  accounts: [Account]
}

enum TransactionStatusType {
  Success
  Failure
  Submitted
}

type ParsedTime {
  fromNow: String
  full: String
  rawTai64: String
  rawUnix: String
}

enum GroupedInputType {
  InputCoin
  InputContract
  InputMessage
}

type GroupedInput {
  type: GroupedInputType
  totalAmount: U64
  inputs: [Input]
  contractId: ContractId
  assetId: AssetId
  sender: Address
  recipient: Address
  data: HexString
  owner: Address
}

enum GroupedOutputType {
  CoinOutput
  ContractOutput
  MessageOutput
  ChangeOutput
  VariableOutput
  ContractCreated
}

type GroupedOutput {
  type: GroupedOutputType
  totalAmount: U64
  outputs: [Output]
  to: Address
  assetId: AssetId
  inputIndex: Int
  recipient: Address
  contract: Contract
}

enum TransactionAccountType {
  Contract
  Predicate
  Wallet
}

type TransactionAccount {
  type: TransactionAccountType
  id: String
}

extend type Transaction {
  title: String
  time: ParsedTime
  blockHeight: String
  statusType: TransactionStatusType
  totalAccounts: Int
  totalAssets: Int
  totalOperations: Int
  gasUsed: U64
  accountsInvolved: [TransactionAccount]
  groupedInputs: [GroupedInput]
  groupedOutputs: [GroupedOutput]
}
