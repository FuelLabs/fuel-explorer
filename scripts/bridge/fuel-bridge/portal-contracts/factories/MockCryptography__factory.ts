/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { MockCryptography } from '../MockCryptography';

export class MockCryptography__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockCryptography> {
    return super.deploy(overrides || {}) as Promise<MockCryptography>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockCryptography {
    return super.attach(address) as MockCryptography;
  }
  connect(signer: Signer): MockCryptography__factory {
    return super.connect(signer) as MockCryptography__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCryptography {
    return new Contract(address, _abi, signerOrProvider) as MockCryptography;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: 'message',
        type: 'bytes32',
      },
    ],
    name: 'addressFromSignature',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'message',
        type: 'bytes32',
      },
    ],
    name: 'addressFromSignatureComponents',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'hash',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061066d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063aa1e84de14610046578063b0d1025a1461006c578063fd1fb62a146100a4575b600080fd5b6100596100543660046104b0565b6100b7565b6040519081526020015b60405180910390f35b61007f61007a3660046104ed565b6100c8565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610063565b61007f6100b236600461052e565b6100df565b60006100c2826100f2565b92915050565b60006100d685858585610144565b95945050505050565b60006100eb83836102d1565b9392505050565b60006002826040516101049190610573565b602060405180830381855afa158015610121573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906100c291906105ae565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156101d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f7369676e61747572652d696e76616c69642d730000000000000000000000000060448201526064015b60405180910390fd5b6040805160008082526020820180845285905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610229573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166100d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7369676e61747572652d696e76616c696400000000000000000000000000000060448201526064016101cc565b6000825160401461033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7369676e61747572652d696e76616c69642d6c656e677468000000000000000060448201526064016101cc565b6000806000808680602001905181019061035891906105c7565b945092507f8000000000000000000000000000000000000000000000000000000000000000841661038a57600061038d565b60015b61039890601b6105eb565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8516925090506103cb81848489610144565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261041657600080fd5b813567ffffffffffffffff80821115610431576104316103d6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610477576104776103d6565b8160405283815286602085880101111561049057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156104c257600080fd5b813567ffffffffffffffff8111156104d957600080fd5b6104e584828501610405565b949350505050565b6000806000806080858703121561050357600080fd5b843560ff8116811461051457600080fd5b966020860135965060408601359560600135945092505050565b6000806040838503121561054157600080fd5b823567ffffffffffffffff81111561055857600080fd5b61056485828601610405565b95602094909401359450505050565b6000825160005b81811015610594576020818601810151858301520161057a565b818111156105a3576000828501525b509190910192915050565b6000602082840312156105c057600080fd5b5051919050565b600080604083850312156105da57600080fd5b505080516020909101519092909150565b600060ff821660ff84168060ff0382111561062f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01939250505056fea26469706673582212209356f091be591295c4cdeb42ce8544fd429f4b7763f0131620569f68f81dc4b564736f6c63430008090033';
