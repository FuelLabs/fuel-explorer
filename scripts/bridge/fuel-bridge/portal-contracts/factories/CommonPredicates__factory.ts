/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';

import type { CommonPredicates } from '../CommonPredicates';

export class CommonPredicates__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CommonPredicates> {
    return super.deploy(overrides || {}) as Promise<CommonPredicates>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CommonPredicates {
    return super.attach(address) as CommonPredicates;
  }
  connect(signer: Signer): CommonPredicates__factory {
    return super.connect(signer) as CommonPredicates__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommonPredicates {
    return new Contract(address, _abi, signerOrProvider) as CommonPredicates;
  }
}

const _abi = [
  {
    inputs: [],
    name: 'CONTRACT_MESSAGE_PREDICATE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063105b5ed8146038575b600080fd5b605e7f809f80a984a60d641d4a6d284e3969ff380eb478e587bcba0ed1a3f0ef271ede81565b60405190815260200160405180910390f3fea26469706673582212203169148d147b3efe9880ac1d970ddc55936b023a016d9b6b80d94203573e0cc664736f6c63430008090033';
